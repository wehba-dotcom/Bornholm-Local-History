version: '3.8'

services:
  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
       - "8004:80"
  webapi-service:
    build:
        context: .
        dockerfile: WebApi/Dockerfile
    ports:
        - 8003:80
    depends_on:
        - apigateway
        - identity-api
        - seq
        - zipkin
        - prometheus
        - grafana
    restart:
        on-failure
  product-api:
    build:
      context: .
      dockerfile: ProductApi/Dockerfile
    ports:
      - 8000:80
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__ApplicationDbContextConnection: "Server=192.168.0.52;Database=productService;User Id=SA;Password=Asd123asd;trusted_connection=false;Persist Security Info=False;Encrypt=False"
    depends_on:
      - database

  identity-api:
    build:
      context: .
      dockerfile: IdentityService/Dockerfile
    ports:
      - 8001:80
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__ApplicationDbContextConnection: "Server=192.168.0.52;Database=IdentityService;User Id=SA;Password=Asd123asd;trusted_connection=false;Persist Security Info=False;Encrypt=False"
    depends_on:
      - database
  order-api:
    build:
      context: .
      dockerfile: OrderApi/Dockerfile
    ports:
      - 8002:80
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__ApplicationDbContextConnection: "Server=192.168.0.52;Database=orderService;User Id=SA;Password=Asd123asd;trusted_connection=false;Persist Security Info=False;Encrypt=False"
    depends_on:
      - database
      - product-api
  database:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: "Asd123asd"
      MSSQL_PID: Express
    ports:
      - 1433:1433
  seq:
    image: datalust/seq
    ports:
     - 5341:5341
     - 5342:80
    volumes:
     - rps_seq_data1:/data
    environment:
     - ACCEPT_EULA=Y
  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411 
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
    - 9090:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
  grafana: 
    image: grafana/grafana
    ports:
      - "3000:3000"  
volumes:
 rps_seq_data1: