// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using productApi.Data;

#nullable disable

namespace ProductApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240215072059_updatefatningtable")]
    partial class updatefatningtable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductApi.Models.FastningBook", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Efternavn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaestebrevUdstedt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaesterNavn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaesterTilNavn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Film")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fornavn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForrigeFaesterEfterNavn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForrigeFaesterForNavn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForrigeFaesterNavn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForrigeFaesterTilNavnmm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gaard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Herred")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Indskrivningsnr")
                        .HasColumnType("int");

                    b.Property<string>("Kommentarer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Side")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sogn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("bogId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("bogId");

                    b.ToTable("FastningBooks");
                });

            modelBuilder.Entity("ProductApi.Models.FastningBook+Bog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bog");
                });

            modelBuilder.Entity("ProductApi.Models.FastningBook", b =>
                {
                    b.HasOne("ProductApi.Models.FastningBook+Bog", "bog")
                        .WithMany()
                        .HasForeignKey("bogId");

                    b.Navigation("bog");
                });
#pragma warning restore 612, 618
        }
    }
}
